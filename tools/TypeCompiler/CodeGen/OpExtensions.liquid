//----------------------
// <auto-generated>
// </auto-generated>
//----------------------
using System;
using LanguageExt;
using Infusion.Model;

namespace Infusion.Ops
{
  internal static class InfusionOpExtensions
  {
    public static InfusionOp<B> Map<A, B>(this InfusionOp<A> op, Func<A, B> fn) =>
        op.Bind(a => InfusionDsl.Return(fn(a)));

    public static InfusionOp<B> Select<A, B>(this InfusionOp<A> op, Func<A, B> fn) =>
        op.Bind(a => InfusionDsl.Return(fn(a)));

    public static InfusionOp<C> SelectMany<A, B, C>(this InfusionOp<A> op, Func<A, InfusionOp<B>> bind, Func<A, B, C> project) =>
        op.Bind(a => bind(a).Select(b => project(a, b)));

    static InfusionOp<B> Bind<A, B>(this InfusionOp<A> op, Func<A, InfusionOp<B>> fn) =>
      op is InfusionOp<A>.Return rt                               ? fn(rt.Value) :
  }
}