//----------------------
// <auto-generated>
// </auto-generated>
//----------------------
using System;
using LanguageExt;
using Infusion.Ops;
using Infusion.Model;

namespace Infusion
{
  public static class Dsl
  {
      internal static InfusionOp<A> Return<A>(A value) =>
          new InfusionOp<A>.Return(value);

      public static InfusionOp<AccountProfile> GetAccountProfile() =>
          new GetAccountProfile<AccountProfile>(Return);

      public static InfusionOp<AffiliateCommissionList> SearchCommissions(long? affiliateId = default, int? offset = default, int? limit = default, string until = default, string since = default) =>
          new SearchCommissions<AffiliateCommissionList>(Return, affiliateId, offset, limit, until, since);

      public static InfusionOp<ObjectModel> RetrieveAffiliateModel() =>
          new RetrieveAffiliateModel<ObjectModel>(Return);

      public static InfusionOp<AppointmentList> ListAppointments(long? contactId = default, int? offset = default, int? limit = default, string until = default, string since = default) =>
          new ListAppointments<AppointmentList>(Return, contactId, offset, limit, until, since);

      public static InfusionOp<ObjectModel> RetrieveAppointmentModel() =>
          new RetrieveAppointmentModel<ObjectModel>(Return);

      public static InfusionOp<Appointment> GetAppointment(long? appointmentId) =>
          new GetAppointment<Appointment>(Return, appointmentId);

      public static InfusionOp<CampaignList> ListCampaigns(string orderDirection = default, string order = default, string searchText = default, int? offset = default, int? limit = default) =>
          new ListCampaigns<CampaignList>(Return, orderDirection, order, searchText, offset, limit);

      public static InfusionOp<Campaign> GetCampaign(long? campaignId, Lst<string> optionalProperties = default) =>
          new GetCampaign<Campaign>(Return, campaignId, optionalProperties);

      public static InfusionOp<Unit> AddContactsToCampaignSequence(SetOfIds ids, long? sequenceId, long? campaignId) =>
          new AddContactsToCampaignSequence<Unit>(Return, ids, sequenceId, campaignId);

      public static InfusionOp<Unit> AddContactToCampaignSequence(long? contactId, long? sequenceId, long? campaignId) =>
          new AddContactToCampaignSequence<Unit>(Return, contactId, sequenceId, campaignId);

      public static InfusionOp<CompanyList> ListCompanies(Lst<string> optionalProperties = default, string orderDirection = default, string order = default, string companyName = default, int? offset = default, int? limit = default) =>
          new ListCompanies<CompanyList>(Return, optionalProperties, orderDirection, order, companyName, offset, limit);

      public static InfusionOp<ObjectModel> RetrieveCompanyModel() =>
          new RetrieveCompanyModel<ObjectModel>(Return);

      public static InfusionOp<ContactList> ListContacts(string orderDirection = default, string order = default, string familyName = default, string givenName = default, string email = default, int? offset = default, int? limit = default) =>
          new ListContacts<ContactList>(Return, orderDirection, order, familyName, givenName, email, offset, limit);

      public static InfusionOp<ObjectModel> RetrieveContactModel() =>
          new RetrieveContactModel<ObjectModel>(Return);

      public static InfusionOp<Unit> DeleteContact(long? contactId) =>
          new DeleteContact<Unit>(Return, contactId);

      public static InfusionOp<Unit> CreateCreditCard(long? contactId, CreditCard creditCard = default) =>
          new CreateCreditCard<Unit>(Return, contactId, creditCard);

      public static InfusionOp<EmailSentQueryResultList> ListEmailsForContact(long? contactId, string email = default, long? contactId2 = default, int? offset = default, int? limit = default) =>
          new ListEmailsForContact<EmailSentQueryResultList>(Return, contactId, email, contactId2, offset, limit);

      public static InfusionOp<ContactTagList> ListAppliedTags(long? contactId, int? offset = default, int? limit = default) =>
          new ListAppliedTags<ContactTagList>(Return, contactId, offset, limit);

      public static InfusionOp<Unit> RemoveTagsFromContact(long? tagId, long? contactId) =>
          new RemoveTagsFromContact<Unit>(Return, tagId, contactId);

      public static InfusionOp<FullContact> GetContact(long? id, Lst<string> optionalProperties = default) =>
          new GetContact<FullContact>(Return, id, optionalProperties);

      public static InfusionOp<EmailSentQueryResultList> ListEmails(string email = default, long? contactId = default, int? offset = default, int? limit = default) =>
          new ListEmails<EmailSentQueryResultList>(Return, email, contactId, offset, limit);

      public static InfusionOp<Unit> CreateEmails(EmailSentCreateList emailWithContent = default) =>
          new CreateEmails<Unit>(Return, emailWithContent);

      public static InfusionOp<Unit> DeleteEmails(SetOfIds emailIds) =>
          new DeleteEmails<Unit>(Return, emailIds);

      public static InfusionOp<EmailSentQueryResultWithContent> GetEmail(long? id) =>
          new GetEmail<EmailSentQueryResultWithContent>(Return, id);

      public static InfusionOp<FileList> ListFiles(string name = default, string type = default, string permission = default, string viewable = default, int? offset = default, int? limit = default) =>
          new ListFiles<FileList>(Return, name, type, permission, viewable, offset, limit);

      public static InfusionOp<FileInformation> GetFile(long? fileId, Lst<string> optionalProperties = default) =>
          new GetFile<FileInformation>(Return, fileId, optionalProperties);

      public static InfusionOp<Unit> ListStoredHookSubscriptions() =>
          new ListStoredHookSubscriptions<Unit>(Return);

      public static InfusionOp<Unit> ListHookEventTypes() =>
          new ListHookEventTypes<Unit>(Return);

      public static InfusionOp<RestHook> RetrieveAHookSubscription(string key) =>
          new RetrieveAHookSubscription<RestHook>(Return, key);

      public static InfusionOp<RestHook> VerifyAHookSubscriptionDelayed(string xHookSecret, string key) =>
          new VerifyAHookSubscriptionDelayed<RestHook>(Return, xHookSecret, key);

      public static InfusionOp<RestHook> VerifyAHookSubscription(string key) =>
          new VerifyAHookSubscription<RestHook>(Return, key);

      public static InfusionOp<UserInfoDTO> GetUserInfo() =>
          new GetUserInfo<UserInfoDTO>(Return);

      public static InfusionOp<OpportunityList> ListOpportunities(string order = default, string searchTerm = default, long? stageId = default, long? userId = default, int? offset = default, int? limit = default) =>
          new ListOpportunities<OpportunityList>(Return, order, searchTerm, stageId, userId, offset, limit);

      public static InfusionOp<ObjectModel> RetrieveOpportunityModel() =>
          new RetrieveOpportunityModel<ObjectModel>(Return);

      public static InfusionOp<Opportunity> GetOpportunity(long? opportunityId, Lst<string> optionalProperties = default) =>
          new GetOpportunity<Opportunity>(Return, opportunityId, optionalProperties);

      public static InfusionOp<Unit> ListOpportunityStagePipelines() =>
          new ListOpportunityStagePipelines<Unit>(Return);

      public static InfusionOp<OrderList> ListOrders(long? productId = default, long? contactId = default, string order = default, bool paid = default, int? offset = default, int? limit = default, string until = default, string since = default) =>
          new ListOrders<OrderList>(Return, productId, contactId, order, paid, offset, limit, until, since);

      public static InfusionOp<ObjectModel> RetrieveOrderModel() =>
          new RetrieveOrderModel<ObjectModel>(Return);

      public static InfusionOp<Order> GetOrder(long? orderId) =>
          new GetOrder<Order>(Return, orderId);

      public static InfusionOp<TransactionList> ListTransactionsForOrder(long? orderId, long? contactId = default, int? offset = default, int? limit = default, string until = default, string since = default) =>
          new ListTransactionsForOrder<TransactionList>(Return, orderId, contactId, offset, limit, until, since);

      public static InfusionOp<ProductList> ListProducts(bool active = default, int? offset = default, int? limit = default) =>
          new ListProducts<ProductList>(Return, active, offset, limit);

      public static InfusionOp<ProductStatusList> ListProductsFromSyncToken(int? offset = default, int? limit = default, string syncToken = default) =>
          new ListProductsFromSyncToken<ProductStatusList>(Return, offset, limit, syncToken);

      public static InfusionOp<Product> GetProduct(long? productId) =>
          new GetProduct<Product>(Return, productId);

      public static InfusionOp<Setting> GetApplicationEnabled() =>
          new GetApplicationEnabled<Setting>(Return);

      public static InfusionOp<Setting> GetContactOptionTypes() =>
          new GetContactOptionTypes<Setting>(Return);

      public static InfusionOp<ObjectModel> RetrieveSubscriptionModel() =>
          new RetrieveSubscriptionModel<ObjectModel>(Return);

      public static InfusionOp<Tags> ListTags(long? category = default, int? offset = default, int? limit = default) =>
          new ListTags<Tags>(Return, category, offset, limit);

      public static InfusionOp<TagCategory> CreateTagCategory(CreateTagCategory tagCategory) =>
          new CreateTagCategory<TagCategory>(Return, tagCategory);

      public static InfusionOp<Tag> GetTag(long? id) =>
          new GetTag<Tag>(Return, id);

      public static InfusionOp<TaggedContactList> ListContactsForTagId(long? tagId, int? offset = default, int? limit = default) =>
          new ListContactsForTagId<TaggedContactList>(Return, tagId, offset, limit);

      public static InfusionOp<Unit> RemoveTagFromContactId(long? contactId, long? tagId) =>
          new RemoveTagFromContactId<Unit>(Return, contactId, tagId);

      public static InfusionOp<TaskList> ListTasks(string order = default, int? offset = default, int? limit = default, bool completed = default, string until = default, string since = default, long? userId = default, bool hasDueDate = default, long? contactId = default) =>
          new ListTasks<TaskList>(Return, order, offset, limit, completed, until, since, userId, hasDueDate, contactId);

      public static InfusionOp<ObjectModel> RetrieveTaskModel() =>
          new RetrieveTaskModel<ObjectModel>(Return);

      public static InfusionOp<TaskList> ListTasksForCurrentUser(string order = default, int? offset = default, int? limit = default, bool completed = default, string until = default, string since = default, long? userId = default, bool hasDueDate = default, long? contactId = default) =>
          new ListTasksForCurrentUser<TaskList>(Return, order, offset, limit, completed, until, since, userId, hasDueDate, contactId);

      public static InfusionOp<InfusionTask> GetTask(string taskId) =>
          new GetTask<InfusionTask>(Return, taskId);

      public static InfusionOp<TransactionList> ListTransactions(long? contactId = default, int? offset = default, int? limit = default, string until = default, string since = default) =>
          new ListTransactions<TransactionList>(Return, contactId, offset, limit, until, since);

      public static InfusionOp<Transaction> GetTransaction(long? transactionId) =>
          new GetTransaction<Transaction>(Return, transactionId);

      
  }
}

