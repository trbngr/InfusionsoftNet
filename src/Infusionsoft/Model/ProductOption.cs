//----------------------
// <auto-generated>
// </auto-generated>
//----------------------
using LanguageExt;

namespace Infusion.Model
{
    public class ProductOption : Record<ProductOption>
    {
            public readonly bool AllowSpaces;
            public readonly bool CanContainCharacter;
            public readonly bool CanContainNumber;
            public readonly bool CanEndWithCharacter;
            public readonly bool CanEndWithNumber;
            public readonly bool CanStartWithCharacter;
            public readonly bool CanStartWithNumber;
            public readonly int DisplayIndex;
            public readonly long Id;
            public readonly string Label;
            public readonly int MaxChars;
            public readonly int MinChars;
            public readonly string Name;
            public readonly bool Required;
            public readonly string TextMessage;
            public readonly Type Type;
            public readonly Lst<ProductOptionValue> Values;
      
      public ProductOption(bool allowSpaces = default, bool canContainCharacter = default, bool canContainNumber = default, bool canEndWithCharacter = default, bool canEndWithNumber = default, bool canStartWithCharacter = default, bool canStartWithNumber = default, int displayIndex = default, long id = default, string label = default, int maxChars = default, int minChars = default, string name = default, bool required = default, string textMessage = default, Type type = default, Lst<ProductOptionValue> values = default)
      {
                AllowSpaces = allowSpaces;
                CanContainCharacter = canContainCharacter;
                CanContainNumber = canContainNumber;
                CanEndWithCharacter = canEndWithCharacter;
                CanEndWithNumber = canEndWithNumber;
                CanStartWithCharacter = canStartWithCharacter;
                CanStartWithNumber = canStartWithNumber;
                DisplayIndex = displayIndex;
                Id = id;
                Label = label;
                MaxChars = maxChars;
                MinChars = minChars;
                Name = name;
                Required = required;
                TextMessage = textMessage;
                Type = type;
                Values = values;
        
      }

      public ProductOption Copy(bool allowSpaces = default, bool canContainCharacter = default, bool canContainNumber = default, bool canEndWithCharacter = default, bool canEndWithNumber = default, bool canStartWithCharacter = default, bool canStartWithNumber = default, int? displayIndex = default, long? id = default, string label = default, int? maxChars = default, int? minChars = default, string name = default, bool required = default, string textMessage = default, Type type = default, Lst<ProductOptionValue> values = default) => new ProductOption(
                  allowSpaces:  allowSpaces == default ? AllowSpaces : allowSpaces, 
                        canContainCharacter:  canContainCharacter == default ? CanContainCharacter : canContainCharacter, 
                        canContainNumber:  canContainNumber == default ? CanContainNumber : canContainNumber, 
                        canEndWithCharacter:  canEndWithCharacter == default ? CanEndWithCharacter : canEndWithCharacter, 
                        canEndWithNumber:  canEndWithNumber == default ? CanEndWithNumber : canEndWithNumber, 
                        canStartWithCharacter:  canStartWithCharacter == default ? CanStartWithCharacter : canStartWithCharacter, 
                        canStartWithNumber:  canStartWithNumber == default ? CanStartWithNumber : canStartWithNumber, 
                        displayIndex:  displayIndex ?? DisplayIndex, 
                        id:  id ?? Id, 
                        label:  label ?? Label, 
                        maxChars:  maxChars ?? MaxChars, 
                        minChars:  minChars ?? MinChars, 
                        name:  name ?? Name, 
                        required:  required == default ? Required : required, 
                        textMessage:  textMessage ?? TextMessage, 
                        type:  type == default ? Type : type, 
                        values:  values == default ? Values : values
            
      );
    }
}